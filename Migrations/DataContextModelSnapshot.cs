// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tickets.API.Models;

namespace Tickets.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tickets.API.Models.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AuthorName = "Washington",
                            Date = "26/11/2019",
                            Description = "Lâmpada queimada"
                        },
                        new
                        {
                            Id = 2L,
                            AuthorName = "Pedro",
                            Date = "12/12/2019",
                            Description = "Pintar parede"
                        },
                        new
                        {
                            Id = 3L,
                            AuthorName = "João",
                            Date = "07/01/2020",
                            Description = "Monitor com defeito"
                        },
                        new
                        {
                            Id = 4L,
                            AuthorName = "João2",
                            Date = "07/01/2020222",
                            Description = "Monitor com defeito2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
